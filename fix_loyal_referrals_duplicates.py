#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ–¥–∞–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
–ó–∞–ø—É—Å–∫–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
import os
from datetime import datetime, timedelta
from config import DB_PATH, logger

def fix_loyal_referrals_duplicates():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–∞–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"""
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS loyal_referrals_tracking (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                referrer_id INTEGER,
                referral_id INTEGER,
                credited_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(referrer_id, referral_id),
                FOREIGN KEY(referrer_id) REFERENCES users(user_id),
                FOREIGN KEY(referral_id) REFERENCES users(user_id)
            )
        ''')
        
        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —Å—Ç–∞—Ä—à–µ 3 –¥–Ω–µ–π
        three_days_ago = datetime.now() - timedelta(days=3)
        
        cursor.execute("""
            SELECT u.user_id, u.username, u.ref_by, u.joined_date
            FROM users u
            WHERE u.ref_by IS NOT NULL 
            AND u.joined_date < ?
            ORDER BY u.joined_date DESC
        """, (three_days_ago.isoformat(),))
        
        old_referrals = cursor.fetchall()
        
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(old_referrals)} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ —Å—Ç–∞—Ä—à–µ 3 –¥–Ω–µ–π")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–µ–¥–∞–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö
        cursor.execute("""
            SELECT user_id, loyal_referrals, referrals_count
            FROM users 
            WHERE loyal_referrals > 0 OR referrals_count > 0
        """)
        
        users_with_referrals = cursor.fetchall()
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º–∏: {len(users_with_referrals)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        print("\n=== –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï ===")
        for user_id, loyal_referrals, referrals_count in users_with_referrals:
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}: –ø—Ä–µ–¥–∞–Ω–Ω—ã—Ö {loyal_referrals}, –≤—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ {referrals_count}")
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–∞–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        cursor.execute("""
            CREATE TEMPORARY TABLE temp_loyal_count AS
            SELECT ref_by, COUNT(*) as real_loyal_count
            FROM users 
            WHERE ref_by IS NOT NULL 
            AND joined_date < ?
            GROUP BY ref_by
        """, (three_days_ago.isoformat(),))
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –ø—Ä–µ–¥–∞–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("""
            UPDATE users 
            SET loyal_referrals = (
                SELECT real_loyal_count 
                FROM temp_loyal_count 
                WHERE temp_loyal_count.ref_by = users.user_id
            )
            WHERE user_id IN (SELECT ref_by FROM temp_loyal_count)
        """)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 0 –¥–ª—è —Ç–µ—Ö, —É –∫–æ–≥–æ –Ω–µ—Ç –ø—Ä–µ–¥–∞–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        cursor.execute("""
            UPDATE users 
            SET loyal_referrals = 0
            WHERE user_id NOT IN (SELECT ref_by FROM temp_loyal_count)
            AND loyal_referrals > 0
        """)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–µ–¥–∞–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        cursor.execute("""
            INSERT OR IGNORE INTO loyal_referrals_tracking (referrer_id, referral_id)
            SELECT ref_by, user_id
            FROM users 
            WHERE ref_by IS NOT NULL 
            AND joined_date < ?
        """, (three_days_ago.isoformat(),))
        
        conn.commit()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute("""
            SELECT user_id, loyal_referrals, referrals_count
            FROM users 
            WHERE loyal_referrals > 0 OR referrals_count > 0
        """)
        
        fixed_users = cursor.fetchall()
        
        print("\n=== –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ï –°–û–°–¢–û–Ø–ù–ò–ï ===")
        for user_id, loyal_referrals, referrals_count in fixed_users:
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}: –ø—Ä–µ–¥–∞–Ω–Ω—ã—Ö {loyal_referrals}, –≤—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ {referrals_count}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
        cursor.execute("SELECT COUNT(*) FROM loyal_referrals_tracking")
        tracking_count = cursor.fetchone()[0]
        print(f"\n–ó–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è: {tracking_count}")
        
        print("\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print("–¢–µ–ø–µ—Ä—å —Å–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–µ–¥–∞–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤")
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        conn.rollback()
    finally:
        conn.close()

if __name__ == "__main__":
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ–¥–∞–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤...")
    fix_loyal_referrals_duplicates() 