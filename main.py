#!/usr/bin/env python3
"""
AMB Promo Bot - –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª
–ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–ª—è Telegram –±–æ—Ç–∞
"""

import logging
from telegram import Update
from telegram.constants import ParseMode
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    CallbackQueryHandler,
    MessageHandler,
    filters,
    ConversationHandler,
    ContextTypes
)

# –ò–º–ø–æ—Ä—Ç—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
from config import TOKEN, ADMIN_IDS, ENTER_CODE, logger

# –ò–º–ø–æ—Ä—Ç—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
from database import db

# –ò–º–ø–æ—Ä—Ç—ã —É—Ç–∏–ª–∏—Ç
from utils import ensure_directories, reset_broadcast_state

# –ò–º–ø–æ—Ä—Ç—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä
from keyboards import get_back_inline_keyboard

# –ò–º–ø–æ—Ä—Ç—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
from handlers.user_handlers import (
    start, check_subscription_handler, profile, rules_handler, 
    support_handler, main_button_handler, send_main_reply_keyboard, get_my_id,
    accept_rules_handler, refresh_subscription, show_rules_handler, general_back_handler,
    check_loyalty_manual
)

from handlers.admin_handlers import (
    admin_panel, content_command, content_add_meme_handler, content_delete_meme_handler,
    content_list_chats_handler, content_add_chat_handler, content_delete_chat_handler,
    content_add_text_handler, content_list_texts_handler, promo_panel, promo_add_offer_handler,
    promo_delete_offer_handler, promo_list_offers_handler, stats_command, 
    send_users_file_handler, broadcast_panel, handle_admin_broadcast_message,
    handle_admin_input, clear_chat, debug_subscription_command, clear_cache_command,
    check_db_status
)

from handlers.task_handlers import (
    show_participate_menu, handle_task_meme, handle_task_text, handle_task_other_text,
    handle_task_other_meme, handle_task_repost, handle_task_back, handle_task_done,
    handle_screenshot, check_tasks_command
)

from handlers.promo_handlers import (
    promo_user_start, promo_choose_handler, promo_back_handler, promo_offer_handler,
    promo_confirm_handler, prompt_promo_code, receive_promo_code, get_gift
)

async def handle_task_approval(update: Update, context: ContextTypes.DEFAULT_TYPE, action: str) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–¥–æ–±—Ä–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π"""
    query = update.callback_query
    await query.answer()
    
    _, task_id = query.data.split('|', 1)
    task_id = int(task_id)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è
    db.cursor.execute("SELECT user_id, task_type FROM tasks WHERE task_id = ?", (task_id,))
    row = db.cursor.fetchone()
    if not row:
        await query.message.edit_text("–ó–∞–¥–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return
    
    user_id, task_type = row
    
    if action == 'approve':
        if task_type == 'promo':
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–¥ –∫—É–ø–æ–Ω–∞ —É –∞–¥–º–∏–Ω–∞
            context.user_data['task_stage'] = 'await_promo_code'
            context.user_data['task_id'] = task_id
            context.user_data['task_user_id'] = user_id
            await query.message.edit_text(
                "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∫—É–ø–æ–Ω–∞ –¥–ª—è –ø—Ä–æ–º–æ:",
                reply_markup=get_back_inline_keyboard()
            )
            return
        
        # –û–±—ã—á–Ω–æ–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –¥–ª—è –¥—Ä—É–≥–∏—Ö –∑–∞–¥–∞–Ω–∏–π
        db.approve_task(task_id, user_id)
        await context.bot.send_message(
            chat_id=user_id,
            text=(
                "üòà*–í–ê–ê–ô –ö–†–ê–°–ê–£–ß–ò–ö\n"
                "–ó–∞–¥–∞–Ω–∏–µ –æ–¥–æ–±—Ä–∏–ª —Å–∞–º –ê–î–ú–ò–ù!*\n\n"
                "üìà_–ï—â–µ *–ß–£–¢ –ß–£–¢* –∏ –∫–∞—Ç–∞—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ –±—É–¥–µ—à—å!!!_\n\n"
                "‚ô¶Ô∏è*–ü—Ä–æ–≤–µ—Ä—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ —Å–∫–æ–ª—å–∫–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –ø—Ä–∏—à–ª–æ*‚ô¶Ô∏è"
            ),
            parse_mode=ParseMode.MARKDOWN
        )
    else:  # decline
        db.decline_task(task_id, user_id)
        await context.bot.send_message(
            chat_id=user_id,
            text=(
                "*üòï–ê–ô –ë–†–ê–¢ –û–ë–ò–ñ–ê–ï–®–¨*\n\n"
                "‚ûñ_–ó–∞–¥–∞–Ω–∏–µ –Ω–µ –æ–¥–æ–±—Ä–∏–ª –∞–¥–º–∏–Ω\n–í–æ–∑–º–æ–∂–Ω–æ, —Ç—ã –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª —É—Å–ª–æ–≤–∏—è –∏–ª–∏ –Ω–µ –ø—Ä–∏–ª–æ–∂–∏–ª —Å–∫—Ä–∏–Ω—à–æ—Ç._\n\n"
                "‚òëÔ∏è*–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!*"
            ),
            parse_mode=ParseMode.MARKDOWN
        )
    
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞ –∏ —Ñ–æ—Ç–æ
    photo_msg_id = context.user_data.pop('last_task_photo_msg_id', None)
    photo_chat_id = context.user_data.pop('last_task_photo_chat_id', None)
    if photo_msg_id and photo_chat_id:
        try:
            await context.bot.delete_message(chat_id=photo_chat_id, message_id=photo_msg_id)
        except:
            pass
    await query.message.delete()

def main() -> None:
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    ensure_directories()
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = ApplicationBuilder().token(TOKEN).build()
    
    # ===== –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í –ö–û–ú–ê–ù–î =====
    application.add_handler(CommandHandler('start', start))
    application.add_handler(CommandHandler('profile', profile))
    application.add_handler(CommandHandler('clear', clear_chat))
    application.add_handler(CommandHandler('debug_sub', debug_subscription_command))
    application.add_handler(CommandHandler('clear_cache', clear_cache_command))
    application.add_handler(CommandHandler('myid', get_my_id))
    application.add_handler(CommandHandler('refresh', refresh_subscription))
    application.add_handler(CommandHandler('check_loyalty', check_loyalty_manual))
    application.add_handler(CommandHandler('db_status', check_db_status))
    
    # ===== –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø CALLBACK –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í =====
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(
        CallbackQueryHandler(check_subscription_handler, pattern='^check_subscription$')
    )
    application.add_handler(
        CallbackQueryHandler(send_users_file_handler, pattern='^get_users_file$')
    )
    
    # –ü—Ä–æ–º–æ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(
        CallbackQueryHandler(promo_choose_handler, pattern='^promo_choose$')
    )
    application.add_handler(
        CallbackQueryHandler(promo_back_handler, pattern='^promo_back$')
    )
    application.add_handler(
        CallbackQueryHandler(promo_offer_handler, pattern=r'^promo_offer\|\d+$')
    )
    application.add_handler(
        CallbackQueryHandler(promo_confirm_handler, pattern=r'^promo_confirm\|\d+$')
    )
    application.add_handler(
        CallbackQueryHandler(get_gift, pattern='^get_gift$')
    )
    
    # –ó–∞–¥–∞–Ω–∏—è callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(
        CallbackQueryHandler(show_participate_menu, pattern='^participate$')
    )
    application.add_handler(
        CallbackQueryHandler(handle_task_meme, pattern='^task_meme$')
    )
    application.add_handler(
        CallbackQueryHandler(handle_task_text, pattern='^task_text$')
    )
    application.add_handler(
        CallbackQueryHandler(handle_task_other_text, pattern='^task_other_text$')
    )
    application.add_handler(
        CallbackQueryHandler(handle_task_other_meme, pattern='^task_other_meme$')
    )
    application.add_handler(
        CallbackQueryHandler(handle_task_repost, pattern='^task_repost$')
    )
    application.add_handler(
        CallbackQueryHandler(handle_task_back, pattern='^task_back$')
    )
    application.add_handler(
        CallbackQueryHandler(handle_task_done, pattern='^task_done$')
    )
    
    # –ê–¥–º–∏–Ω—Å–∫–∏–µ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(
        CallbackQueryHandler(lambda u, c: broadcast_panel(u, c), pattern='^admin_broadcast$')
    )
    application.add_handler(
        CallbackQueryHandler(lambda u, c: reset_broadcast_state(c), pattern='^bc_cancel$')
    )
    application.add_handler(
        CallbackQueryHandler(lambda u, c: None, pattern='^bc_attach_photo$')  # TODO: implement
    )
    application.add_handler(
        CallbackQueryHandler(lambda u, c: None, pattern='^bc_send_confirm$')  # TODO: implement
    )
    application.add_handler(
        CallbackQueryHandler(lambda u, c: None, pattern='^bc_execute$')  # TODO: implement
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ–¥–æ–±—Ä–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π
    application.add_handler(
        CallbackQueryHandler(lambda u, c: handle_task_approval(u, c, 'approve'), pattern=r'^approve_task\|\d+$')
    )
    application.add_handler(
        CallbackQueryHandler(lambda u, c: handle_task_approval(u, c, 'decline'), pattern=r'^decline_task\|\d+$')
    )
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –∏ –ø—Ä–∞–≤–∏–ª
    application.add_handler(
        CallbackQueryHandler(profile, pattern='^profile$')
    )
    application.add_handler(
        CallbackQueryHandler(rules_handler, pattern='^rules$')
    )
    application.add_handler(
        CallbackQueryHandler(support_handler, pattern='^support$')
    )
    application.add_handler(
        CallbackQueryHandler(show_rules_handler, pattern='^start_accept_rules$')
    )
    application.add_handler(
        CallbackQueryHandler(accept_rules_handler, pattern='^final_accept_rules$')
    )
    application.add_handler(
        CallbackQueryHandler(general_back_handler, pattern='^general_back$')
    )
    
    # ===== –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø MESSAGE –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í =====
    
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏
    application.add_handler(
        MessageHandler(filters.Regex('^üë§ –ü—Ä–æ—Ñ–∏–ª—å$'), profile)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^‚ÑπÔ∏è –ü—Ä–∞–≤–∏–ª–∞$'), rules_handler)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^üõ† –ü–æ–¥–¥–µ—Ä–∂–∫–∞$'), support_handler)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^–ì–ª–∞–≤–Ω–∞—è$'), main_button_handler)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^–ó–∞–¥–∞–Ω–∏—è$'), show_participate_menu)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^üî•–ü–æ–ª—É—á–∏—Ç—å –ü–†–û–ú–û$'), promo_user_start)
    )
    
    # –ê–¥–º–∏–Ω—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏
    application.add_handler(
        MessageHandler(filters.Regex('^–ê–¥–º–∏–Ω$') & filters.User(ADMIN_IDS), admin_panel)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^–ö–æ–Ω—Ç–µ–Ω—Ç$') & filters.User(ADMIN_IDS), content_command)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^–ü—Ä–æ–º–æ$') & filters.User(ADMIN_IDS), promo_panel)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞$') & filters.User(ADMIN_IDS), stats_command)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^–†–∞—Å—Å—ã–ª–∫–∞$') & filters.User(ADMIN_IDS), broadcast_panel)
    )
    
    # –ê–¥–º–∏–Ω—Å–∫–∏–µ –ø–æ–¥–º–µ–Ω—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    application.add_handler(
        MessageHandler(filters.Regex('^üì• –î–æ–±–∞–≤–∏—Ç—å –º–µ–º$') & filters.User(ADMIN_IDS), content_add_meme_handler)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^üóë –£–¥–∞–ª–∏—Ç—å –º–µ–º$') & filters.User(ADMIN_IDS), content_delete_meme_handler)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^üìã –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤$') & filters.User(ADMIN_IDS), content_list_chats_handler)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^‚ûï –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç$') & filters.User(ADMIN_IDS), content_add_chat_handler)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^üóë –£–¥–∞–ª–∏—Ç—å —á–∞—Ç$') & filters.User(ADMIN_IDS), content_delete_chat_handler)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^‚úçÔ∏è –î–æ–±–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç$') & filters.User(ADMIN_IDS), content_add_text_handler)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^üßæ –°–ø–∏—Å–æ–∫ —Ç–µ–∫—Å—Ç–æ–≤$') & filters.User(ADMIN_IDS), content_list_texts_handler)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^üîô –ù–∞–∑–∞–¥$') & filters.User(ADMIN_IDS), admin_panel)
    )
    
    # –ê–¥–º–∏–Ω—Å–∫–∏–µ –ø–æ–¥–º–µ–Ω—é –ø—Ä–æ–º–æ
    application.add_handler(
        MessageHandler(filters.Regex('^üì• –î–æ–±–∞–≤–∏—Ç—å –æ—Ñ—Ñ–µ—Ä$') & filters.User(ADMIN_IDS), promo_add_offer_handler)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^üóë –£–¥–∞–ª–∏—Ç—å –æ—Ñ—Ñ–µ—Ä$') & filters.User(ADMIN_IDS), promo_delete_offer_handler)
    )
    application.add_handler(
        MessageHandler(filters.Regex('^üìã –°–ø–∏—Å–æ–∫ –æ—Ñ—Ñ–µ—Ä–æ–≤$') & filters.User(ADMIN_IDS), promo_list_offers_handler)
    )
    
    # ===== CONVERSATION HANDLER –î–õ–Ø –ü–†–û–ú–û–ö–û–î–û–í =====
    promo_conv = ConversationHandler(
        entry_points=[
            MessageHandler(filters.Regex('^‚úÖ–í–≤–µ—Å—Ç–∏ –ü–†–û–ú–û$'), prompt_promo_code)
        ],
        states={
            ENTER_CODE: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, receive_promo_code)
            ]
        },
        fallbacks=[],
        per_user=True,
        per_chat=True
    )
    application.add_handler(promo_conv)
    
    # ===== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ê–î–ú–ò–ù–°–ö–û–ì–û –í–í–û–î–ê =====
    application.add_handler(
        MessageHandler(
            filters.TEXT & filters.User(ADMIN_IDS), 
            handle_admin_broadcast_message
        )
    )
    application.add_handler(
        MessageHandler(
            filters.ALL & filters.User(ADMIN_IDS) & ~filters.Regex('^–ê–¥–º–∏–Ω$') & ~filters.Regex('^–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞$'),
            handle_admin_input
        ),
        group=1
    )
    
    # ===== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –§–û–¢–û/–î–û–ö–£–ú–ï–ù–¢–û–í =====
    application.add_handler(
        MessageHandler(
            filters.PHOTO | filters.Document.IMAGE,
            handle_screenshot
        )
    )
    
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    application.run_polling()

if __name__ == '__main__':
    main() 